<html>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" >
<body>

<?php

if (isset($_REQUEST['generate']))
{

/* 

Ez a kis példakód arról szól, hogyan lehet Számla Agent segítségével számlát készíteni.
Arra az esetre vonatkozik ha nem xml-ben kértük a választ, és kértük a számla pdf letöltését.

A következőkre mutat példát:

 - hogyan kezeljük a session cookiet
 - hogyan adjunk át fájlt a Számla Agentnek
 - hogyan mentsük le az érkezett pdf-et
 - hogyan olvassuk ki a válasz header-ből a Számla Agent által küldött adatokat
 - hogyan ellenőrizzük, hogy rendben elkészült-e a számla
 - hogyan kapjunk információt arról, hogyha nem készült el a számla, akkor mi lehetett a probléma

*/

// cookie file teljes elérési útja a szerveren
$cookie_file = '/var/www/szamlazz_cookie.txt';
// ebbe a fájlba menti a pdf-et, ha az xml-ben kértük
$pdf_file = '/var/www/szamla.pdf';
// ezt az xml fájlt küldi a számla agentnek
$xmlfile = '/var/www/szamla.xml';
// a számla agentet ezen az urlen lehet elérni
$agent_url = 'https://www.szamlazz.hu/szamla/';
// ha kérjük a számla pdf-et, akkor legyen true
$szamlaletoltes = true;

// ha még nincs --> létrehozzuk a cookie file-t --> léteznie kell, hogy a CURL írhasson bele
if (!file_exists($cookie_file)) {
    file_put_contents($cookie_file, '');
}

// a CURL inicializálása
$ch = curl_init($agent_url);

// A curl hívás esetén tanúsítványhibát kaphatunk az SSL tanúsítvány valódiságától 
// függetlenül, ez az alábbi CURL paraméter állítással kiküszöbölhető, 
// ilyenkor nincs külön SSL ellenőrzés:
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);

// POST-ban küldjük az adatokat
curl_setopt($ch, CURLOPT_POST, true);

// Kérjük a HTTP headert a válaszba, fontos információk vannak benne
curl_setopt($ch, CURLOPT_HEADER, true);

// változóban tároljuk a válasz tartalmát, nem írjuk a kimenetbe
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

// Beállítjuk, hol van az XML, amiből számlát szeretnénk csinálni (= file upload)
// az xmlfile-t itt fullpath-al kell megadni. 5.5 vagy annál nagyobb verziójú PHP esetén 
// már a CURLFile osztály használata szükséges az xml fájl feltöltéséhez:
// http://stackoverflow.com/questions/17032990/can-anyone-give-me-an-example-for-phps-curlfile-class
// http://php.net/manual/en/class.curlfile.php
// Kb így néz ki CURLFile használatával:
//    curl_setopt($ch, CURLOPT_POSTFIELDS, array('action-xmlagentxmlfile'=>new CURLFile($xmlfile, 'application/xml', ‘filenev'))); 
// És még egy opciót szükséges ilyenkor beállítani:
//    curl_setopt($ch, CURLOPT_SAFE_UPLOAD, true);


if (!defined('PHP_VERSION_ID')) {
  $version = explode('.', PHP_VERSION);

  define('PHP_VERSION_ID', ($version[0] * 10000 + $version[1] * 100 + $version[2]));
}


if (PHP_VERSION_ID < 50500) {
  curl_setopt($ch, CURLOPT_POSTFIELDS, array('action-xmlagentxmlfile'=>'@' . realpath($xmlfile))); 
} else {
  curl_setopt($ch, CURLOPT_POSTFIELDS, array('action-xmlagentxmlfile'=>new CURLFile(realpath($xmlfile)))); 
  curl_setopt($ch, CURLOPT_SAFE_UPLOAD, true);
}

// 30 másodpercig tartjuk fenn a kapcsolatot (ha valami bökkenő volna)
curl_setopt($ch, CURLOPT_TIMEOUT, 30);

// Itt állítjuk be, hogy az érkező cookie a $cookie_file-ba kerüljön mentésre
curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie_file); 

// Ha van már cookie file-unk, és van is benne valami, elküldjük a Számlázz.hu-nak
if (file_exists($cookie_file) && filesize($cookie_file) > 0) {
    curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie_file); 
}

// elküldjük a kérést a Számlázz.hu felé, és eltároljuk a választ
$agent_response = curl_exec($ch);

// kiolvassuk a curl-ból volt-e hiba
$http_error = curl_error($ch);

// ezekben a változókban tároljuk a szétbontott választ
$agent_header = '';
$agent_body = '';
$agent_http_code = '';

// lekérjük a válasz HTTP_CODE-ját, ami ha 200, akkor a http kommunikáció rendben volt
// ettől még egyáltalán nem biztos, hogy a számla elkészült
$agent_http_code = curl_getinfo($ch,CURLINFO_HTTP_CODE);

// a válasz egy byte kupac, ebből az első "header_size" darab byte lesz a header
$header_size = curl_getinfo($ch,CURLINFO_HEADER_SIZE);

// a header tárolása, ebben lesznek majd a számlaszám, bruttó nettó összegek, errorcode, stb.
$agent_header = substr($agent_response, 0, $header_size);

// a body tárolása, ez lesz a pdf, vagy szöveges üzenet
$agent_body = substr( $agent_response, $header_size );

// a curl már nem kell, lezárjuk
curl_close($ch);

// a header soronként tartalmazza az információkat, egy tömbbe teszük a külön sorokat
$header_array = explode("\n", $agent_header);

// ezt majd true-ra állítjuk ha volt hiba
$volt_hiba = false;

// ebben lesznek a hiba információk, plusz a bodyban
$agent_error = '';
$agent_error_code = '';

// menjünk végig a header sorokon, ami "szlahu"-val kezdődik az érdekes nekünk és írjuk ki
foreach ($header_array as $val) {
  if (substr($val, 0, strlen('szlahu')) === 'szlahu') {
    echo urldecode($val).'<br>';
    // megvizsgáljuk, hogy volt-e hiba
    if (substr($val, 0, strlen('szlahu_error:')) === 'szlahu_error:') {
      // sajnos volt
      $volt_hiba = true;
      $agent_error = substr($val, strlen('szlahu_error:'));
    }
    if (substr($val, 0, strlen('szlahu_error_code:')) === 'szlahu_error_code:') {
      // sajnos volt
      $volt_hiba = true;
      $agent_error_code = substr($val, strlen('szlahu_error_code:'));
    }
  } 
}

// ha volt http hiba dobunk egy kivételt
if ( $http_error != "" )
{
  echo 'Http hiba történt:'.$http_error;
  throw new Exception('Hiba történt:'.$http_error);
}

if ($volt_hiba) {

  // ha a számla nem készült el kiírjuk amit lehet
  echo 'Agent hibakód: '.$agent_error_code.'<br>';
  echo 'Agent hibaüzenet: '.urldecode($agent_error).'<br>';
  echo 'Agent válasz: '.urldecode($agent_body).'<br>';

  // dobunk egy kivételt
  throw new Exception('Számlakészítés sikertelen:'.$agent_error_code);

} else {

  // ha nem volt hiba feldolgozzuk a válaszban érkezett pdf-et vagy szöveges információt
  if ($szamlaletoltes) {
    // lementjük a pdf file-t
    file_put_contents($pdf_file, $agent_body);

    // tegyünk ki egy linket a számla pdf fájl letöltéséhez
    echo '<br><a href="szamla.pdf" target="_blank">Számla pdf</a>';
  
  } else {
    // ha nem kértük a pdf-et akkor szöveges információ jött a válaszban, ezt kiírjuk
    echo urldecode($agent_body);
  }
}

} else { // if (isset($_REQUEST['generate']))

  // indító form
  echo '<form action="szamla_agent_minta.php" method="post">';
  echo '  <input type="submit" name="generate" value="Számla generálás">';
  echo '</form>';

}

?>

</body>
</html>
