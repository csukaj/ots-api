<?php

namespace App\Entities;

use App\DeviceUsage;
use App\DeviceUsageElement;

class DeviceUsageEntity extends Entity
{
    protected $deviceUsage;
    protected $elements;
    protected $organizationAgeRange;
    protected $fromDate;
    protected $toDate;

    public function __construct(DeviceUsage $usage, $fromDate = null, $toDate = null) {
        parent::__construct();
        $this->deviceUsage = $usage;
        $this->elements = $this->deviceUsage->elements;
        $this->fromDate = $fromDate;
        $this->toDate = $toDate;
    }

    public function getFrontendData(array $additions = []) {
        $return = [
            'id' => $this->deviceUsage->id,
        ];

        foreach ($additions as $addition) {
            switch ($addition) {
                case 'public_elements':
                    $return['elements'] = [];
                    foreach ($this->elements as $element) {
                        $name = $element->ageRange->name->name;
                        $return['elements'][$name] = $element->amount;
                    }
                    break;
                case 'admin':
                    $return['device_id'] = $this->deviceUsage->device_id;
                    $return['elements'] = (new DeviceUsageElementEntity(new DeviceUsageElement()))->getCollection($this->deviceUsage->elements);
                    break;
            }
        }

        return $return;
    }

    static public function getCollectionForDate($usages, array $additions = [], $fromDate = null, $toDate = null) {
        $return = [];
        foreach ($usages as $usage) {
            $return[] = (new self($usage, $fromDate, $toDate))->getFrontendData($additions);
        }
        return $return;
    }
}
